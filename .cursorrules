# LLM Research Repository Guidelines

As an AI assistant helping with this repository, understand that this is a comprehensive collection of Large Language Model (LLM) research, notes, and implementation code. Follow these guidelines when assisting:

## Repository Structure and Content Guidelines

### Research Notes (`/reading/`)
- All research notes are stored as Markdown (.md) files in the `reading/` directory
- Notes should be detailed, prioritizing comprehensive knowledge capture from research papers
- Use proper Markdown formatting for headings, code blocks, citations, and emphasis
- Include paper metadata (authors, publication date, conference/journal, DOI) when available

### Jupyter Notebooks
- Notebooks serve as interactive demonstrations combining theory and practice
- Each notebook should include:
  - Clear explanatory text cells explaining concepts
  - Well-commented code cells demonstrating implementation
  - References to relevant papers or documentation
  - Expected outputs and interpretation guidance

### Python Implementation Files
- Implement using industry-standard patterns and best practices
- Primarily utilize modern LLM frameworks:
  - LlamaIndex for retrieval and indexing operations
  - AutoGen 0.2 for multi-agent systems
  - LangChain/LangGraph for workflow orchestration
- Include detailed docstrings and inline comments
- Follow PEP 8 style guidelines
- Structure code for readability and maintainability

## When Assisting
- Maintain academic rigor in all content
- Prioritize accuracy and clarity in explanations
- Keep code examples current with latest framework versions
- Balance theoretical understanding with practical implementation